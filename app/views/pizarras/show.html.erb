<%= javascript_include_tag :defaults %>
<%= javascript_include_tag :fckeditor %>


<% current_menu_item 'home'%>
 <%= calendar_date_select_includes "silver" %>

<!--#################### body ############################## -->

  <b>Pizarra:</b>
    <%=h @pizarra.nombre %>

<!--#################### boton de ayuda ############################## -->

 <div style="width:98%; text-align:right;">

    <%= link_to image_tag("/images/help.gif",:title=> "Instructivo", :style=>"border:0px;"),
                                help_path,
                                :popup=> ['help', 'width=580, resizable=yes,scrollbars=yes'] %>
 </div>


<!--#################### pizarra - avisos #################### -->

<table id="contentBody">
 <tr>
 <td style="vertical-align:top;background:#FFF;">
   <div id="pizarra" >

   </div>

   <div id="contentNote">
     <%= render (:partial => "pizarra") %>
   </div>

 <!--#################### image - cesto ##################### -->

    <div style="text-align:center;background:#FFF;">
        <%= image_tag "trash.jpg", :id=>'trash', :onMouseOut=>"empty_trash()"%>
    <div>

    </td>
    <td width="20px;">

 </td>

<!--########################### bloque izquierdo ########################### -->

  <td style="vertical-align:top;">
   <table border="0">

    <tr style="background-image: url('/images/fondo.jpg');">
     <td height="230px" style="vertical-align:top;">

<!--####################### nota ################################ -->

     <li id="aviso" class="note" title="Anotador">
          <b>Nota:</b>
           <%= render :partial=> @aviso %>
       </li>

    </td>
    </tr>

   <!--####################### boton_guardar ################################ -->

    <tr style="background-image: url('/images/fondo.jpg');">
     <td style="vertical-align:top;text-align:center;">

   <%= link_to_remote ( image_tag("/images/guardar_nota.gif",
                                :update => "contentNote",
                                :title=> "Agrega Nota a Pizarra"),
                                :url =>  pizarra_avisos_path(@pizarra),
                                :with => "'contenido='+ unEscape()+'&fecha_ven='+
                                fecha_vencimiento('calendar_input_fin')+
                                '&fecha_ini='+fecha_publicacion ('calendar_input_inicio')")
   %>
  </td>
  </tr>


  <!--########################### Input fecha ########################### -->
   <tr id="titleTR">

     <td id="titleTD" align="center">
       <h3>Per&iacute;odo de Avisos:</h3>(*opcional)
     </td>

    </tr>
    <%= render :partial=> "inputCalendar"%>

   <!--#################### listado de Pizarras ##################### -->

    <tr id="titleTR">

     <td id="titleTD" align="center">
       <h3>Listado de Pizarras:</h3>
     </td>

    </tr>
   <tr id="titleTR">

   <td align="center">

   <%= render :partial=> "listado_pizarras", :locals     => {:pizarra_id => @pizarra.id }%>

   </td></tr>

   <!--#################### titulo calendario ##################### -->

    <tr id="titleTR">

     <td id="titleTD">
           <h3>Avisos Anteriores de la Pizarra</h3>
     </td>
    </tr>

     <!--#################### bloque calendario ##################### -->

    <tr>
    <td>
     <div>
     <%= calendar_date_select_includes CalendarDateSelect.format = :iso_date, :style => "default"%>
      <%= calendar_date_select_tag "e_date", nil, :embedded => true,       
        :onchange =>remote_function(:url => {:action => "show_avisos_publicados_fecha"},
        :with => "'fecha=' + $F(this)+ '&id=' + #{@pizarra.id}" )
       %>
     </div>
    </td>
    </tr>
    </table>

  </td>
  </tr>

<!--########################### fin bloque izquierdo ########################### -->

 </table>

<!--#################### elementos draggables #################### -->

 <%= drop_receiving_element ("trash",
        :accept   => "notes",
        :update   => @aviso.css_id,
        :url      => {:action=>:trash_aviso},
        :with     => "'idNote='+ (element.id.split('-').last())",
        :onHover  => "function() {fill_trash()}",
        :loading  => "new Effect.Scale(element.id, 2)",
        :complete => "empty_trash();new Effect.Fade(element.id);") %>
